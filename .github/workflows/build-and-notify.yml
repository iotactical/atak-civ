name: Build and Notify Defense Builders SDK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: iotactical/dbsdk-atak-civ

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      
    outputs:
      version: ${{ steps.version.outputs.version }}
      image: ${{ steps.image.outputs.image }}
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Determine version
        id: version
        run: |
          if [ -f VERSION.txt ]; then
            VERSION=$(cat VERSION.txt | tr -d '\n\r')
          else
            VERSION="0.0.0"
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Detected version: $VERSION"
          
      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=raw,value=${{ steps.version.outputs.version }}
            type=raw,value=latest,enable={{is_default_branch}}
            
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          
      - name: Set image output
        id: image
        run: |
          echo "image=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.version }}" >> $GITHUB_OUTPUT
          
      - name: Make container public
        run: |
          # Make the container package public for community access
          curl -X PATCH \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/orgs/iotactical/packages/container/dbsdk-atak-civ \
            -d '{"visibility":"public"}'
          
  notify-defense-builders:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Determine Java and Gradle versions
        id: build-info
        run: |
          # These could be extracted from build files in a real scenario
          echo "java_version=11" >> $GITHUB_OUTPUT
          echo "gradle_version=7.6" >> $GITHUB_OUTPUT
          echo "android_api=30" >> $GITHUB_OUTPUT
          
      - name: Generate release notes
        id: release-notes
        run: |
          NOTES="Automated build of ATAK-CIV version ${{ needs.build.outputs.version }} from commit ${{ github.sha }}"
          echo "release_notes=$NOTES" >> $GITHUB_OUTPUT
          
      - name: Notify Defense Builders SDK
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.DEFENSE_BUILDERS_PAT }}
          repository: iotactical/defense-builders-sdk
          event-type: sdk-update
          client-payload: |
            {
              "sdk_name": "atak-civ",
              "version": "${{ needs.build.outputs.version }}",
              "container_image": "${{ needs.build.outputs.image }}",
              "java_version": "${{ steps.build-info.outputs.java_version }}",
              "gradle_version": "${{ steps.build-info.outputs.gradle_version }}",
              "android_api": "${{ steps.build-info.outputs.android_api }}",
              "release_notes": "${{ steps.release-notes.outputs.release_notes }}",
              "is_latest": true
            }